colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 12, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .9,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "SBBE Members by Academic Stage & Gender",
subtitle = "Membros da SBBE por Estágio Acadêmico & Gênero") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Generate the plot
make_gender_plot("./SBBEPlots/SBBEMembersStats_Bilingual.png", "Variable_bilingual")
make_gender_plot <- function(filename, label_column) {
number_of_bars <- nrow(Gender)
label_data <- Gender %>%
filter(Percentage > 0) %>%
mutate(
angle = 90 - 360 * (ID - 0.5) / nrow(Gender),
hjust = ifelse(angle < -90, 1, 0),
angle = ifelse(angle < -90, angle + 180, angle),
label_y = ifelse(Percentage * 100 > 30, Percentage * 100 + 8, Percentage * 100 + 5))
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region),
stat = "identity", alpha = 0.5) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 12, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .9,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "SBBE Members by Academic Stage & Gender",
subtitle = "Membros da SBBE por Estágio Acadêmico & Gênero") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
plot.subtitle = element_text(family = "Cormorant", size = 100, colour = "#555555", face = "bold", hjust = .5, margin = margin(t = 10)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Generate the plot
make_gender_plot("./SBBEPlots/SBBEMembersStats_Bilingual.png", "Variable_bilingual")
# 1. Filter Gender data
Gender <- fulldfPlots %>%
filter(Stats %in% c("GenderMembers", "StageMembers")) %>%
droplevels() %>%
arrange(desc(Percentage))
# 4. Add English translations and bilingual labels ~
Gender <- Gender %>%
mutate(
Variable_EN = case_when(
Variable == "Masculino" ~ "Male",
Variable == "Feminino" ~ "Female",
Variable == "Outro" ~ "Other",
Variable == "Profissional" ~ "Professional",
Variable == "Pós-graduação" ~ "Postgrad",
Variable == "Graduação" ~ "Undergrad", TRUE ~ Variable),
Variable_bilingual = paste0("<span style='font-size:60pt; color:#000000;'>", Variable,
"<span style='font-size:60pt; color:#555555;'><br>", Variable_EN, "</span>"))
# 2. Add empty bars for spacing in circular plot
empty_bar <- 6
to_add <- data.frame(matrix(NA, empty_bar * nlevels(Gender$Stats), ncol(Gender)))
colnames(to_add) <- colnames(Gender)
to_add$Stats <- rep(levels(Gender$Stats), each = empty_bar)
Gender <- rbind(Gender, to_add)
Gender <- Gender %>% arrange(Stats)
Gender$ID <- seq(1, nrow(Gender))
# Computes base and grid data for plot ~
base_data_Gender <- Gender %>%
group_by(Stats) %>%
summarize(start = min(ID),
end = max(ID) - empty_bar,
N = n(), .groups = "drop") %>%
mutate(end = ifelse(N == 1, start + 1, end)) %>%
mutate(title = (start + end) / 2)
grid_data_Gender <- base_data_Gender
grid_data_Gender$end <- grid_data_Gender$end[ c(nrow(grid_data_Gender), 1:(nrow(grid_data_Gender) - 1)) ] + 1
grid_data_Gender$start <- grid_data_Gender$start - 1
grid_data_Gender <- grid_data_Gender[-1, ]
# Sets function to plot & save bilingual Stats plot ~
make_gender_plot <- function(filename, label_column) {
number_of_bars <- nrow(Gender)
label_data <- Gender %>%
filter(Percentage > 0) %>%
mutate(
angle = 90 - 360 * (ID - 0.5) / nrow(Gender),
hjust = ifelse(angle < -90, 1, 0),
angle = ifelse(angle < -90, angle + 180, angle),
label_y = ifelse(Percentage * 100 > 30, Percentage * 100 + 8, Percentage * 100 + 5))
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region),
stat = "identity", alpha = 0.5) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 12, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .9,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "Membros da SBBE por Estágio Acadêmico & Gênero",
subtitle = "SBBE Members by Academic Stage & Gender") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
plot.subtitle = element_text(family = "Cormorant", size = 100, colour = "#555555", face = "bold", hjust = .5, margin = margin(t = 10)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Generate the plot
make_gender_plot("./SBBEPlots/SBBEMembersStats_Bilingual.png", "Variable_bilingual")
# Sets function to plot & save bilingual Stats plot ~
make_gender_plot <- function(filename, label_column) {
number_of_bars <- nrow(Gender)
label_data <- Gender %>%
filter(Percentage > 0) %>%
mutate(
angle = 90 - 360 * (ID - 0.5) / nrow(Gender),
hjust = ifelse(angle < -90, 1, 0),
angle = ifelse(angle < -90, angle + 180, angle),
label_y = ifelse(Percentage * 100 > 30, Percentage * 100 + 8, Percentage * 100 + 5))
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region),
stat = "identity", alpha = 0.5) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 20, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .9,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "Membros da SBBE por Estágio Acadêmico & Gênero",
subtitle = "SBBE Members by Academic Stage & Gender") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
plot.subtitle = element_text(family = "Cormorant", size = 100, colour = "#555555", face = "bold", hjust = .5, margin = margin(t = 10)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Generate the plot
make_gender_plot("./SBBEPlots/SBBEMembersStats_Bilingual.png", "Variable_bilingual")
# Sets function to plot & save bilingual Stats plot ~
make_gender_plot <- function(filename, label_column) {
number_of_bars <- nrow(Gender)
label_data <- Gender %>%
filter(Percentage > 0) %>%
mutate(
angle = 90 - 360 * (ID - 0.5) / nrow(Gender),
hjust = ifelse(angle < -90, 1, 0),
angle = ifelse(angle < -90, angle + 180, angle),
label_y = ifelse(Percentage * 100 > 30, Percentage * 100 + 8, Percentage * 100 + 5))
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region),
stat = "identity", alpha = 0.5) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 20, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .75,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "Membros da SBBE por Estágio Acadêmico & Gênero",
subtitle = "SBBE Members by Academic Stage & Gender") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
plot.subtitle = element_text(family = "Cormorant", size = 100, colour = "#555555", face = "bold", hjust = .5, margin = margin(t = 10)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Generate the plot
make_gender_plot("./SBBEPlots/SBBEMembersStats_Bilingual.png", "Variable_bilingual")
# Generate the plot
make_gender_plot("./SBBEPlots/SBBEMembersStats.png", "Variable_bilingual")
# Gets Gender data frame ~
Gender <- fulldfPlots %>%
filter(Stats %in% c("GenderMembers", "StageMembers")) %>%
droplevels() %>%
arrange(desc(Percentage))
# Adds English & bilingual labels  ~
Gender <- Gender %>%
mutate(
Variable_EN = case_when(
Variable == "Masculino" ~ "Male",
Variable == "Feminino" ~ "Female",
Variable == "Outro" ~ "Other",
Variable == "Profissional" ~ "Professional",
Variable == "Pós-graduação" ~ "Postgrad",
Variable == "Graduação" ~ "Undergrad", TRUE ~ Variable),
Variable_bilingual = paste0("<span style='font-size:62pt; color:#000000;'>", Variable,
"<span style='font-size:62pt; color:#555555;'><br>", Variable_EN, "</span>"))
# Adds empty bars for spacing in circular plot ~
empty_bar <- 6
to_add <- data.frame(matrix(NA, empty_bar * nlevels(Gender$Stats), ncol(Gender)))
colnames(to_add) <- colnames(Gender)
to_add$Stats <- rep(levels(Gender$Stats), each = empty_bar)
Gender <- rbind(Gender, to_add)
Gender <- Gender %>% arrange(Stats)
Gender$ID <- seq(1, nrow(Gender))
# Computes base and grid data for plot ~
base_data_Gender <- Gender %>%
group_by(Stats) %>%
summarize(start = min(ID),
end = max(ID) - empty_bar,
N = n(), .groups = "drop") %>%
mutate(end = ifelse(N == 1, start + 1, end)) %>%
mutate(title = (start + end) / 2)
grid_data_Gender <- base_data_Gender
grid_data_Gender$end <- grid_data_Gender$end[ c(nrow(grid_data_Gender), 1:(nrow(grid_data_Gender) - 1)) ] + 1
grid_data_Gender$start <- grid_data_Gender$start - 1
grid_data_Gender <- grid_data_Gender[-1, ]
# Sets function to plot & save bilingual Stats plot ~
make_gender_plot <- function(filename, label_column) {
number_of_bars <- nrow(Gender)
label_data <- Gender %>%
filter(Percentage > 0) %>%
mutate(
angle = 90 - 360 * (ID - 0.5) / nrow(Gender),
hjust = ifelse(angle < -90, 1, 0),
angle = ifelse(angle < -90, angle + 180, angle),
label_y = ifelse(Percentage * 100 > 30, Percentage * 100 + 8, Percentage * 100 + 5))
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region),
stat = "identity", alpha = 0.5) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 20, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .75,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "Membros da SBBE por Estágio Acadêmico & Gênero",
subtitle = "SBBE Members by Academic Stage & Gender") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
plot.subtitle = element_text(family = "Cormorant", size = 100, colour = "#555555", face = "bold", hjust = .5, margin = margin(t = 10)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Applies function ~
make_gender_plot("./SBBEPlots/SBBEMembersStats.png", "Variable_bilingual")
# Sets function to plot & save bilingual Stats plot ~
make_gender_plot <- function(filename, label_column) {
number_of_bars <- nrow(Gender)
label_data <- Gender %>%
filter(Percentage > 0) %>%
mutate(
angle = 90 - 360 * (ID - 0.5) / nrow(Gender),
hjust = ifelse(angle < -90, 1, 0),
angle = ifelse(angle < -90, angle + 180, angle),
label_y = ifelse(Percentage * 100 > 30, Percentage * 100 + 8, Percentage * 100 + 5))
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region),
stat = "identity", alpha = 0.5) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 20, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .75,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "Membros da SBBE por Estágio Acadêmico & Gênero",
subtitle = "SBBE Members by Academic Stage & Gender") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
plot.subtitle = element_text(family = "Cormorant", size = 100, colour = "#555555", face = "bold", hjust = .5, margin = margin(t = 5)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Applies function ~
make_gender_plot("./SBBEPlots/SBBEMembersStats.png", "Variable_bilingual")
# Sets function to plot & save bilingual Stats plot ~
make_gender_plot <- function(filename, label_column) {
number_of_bars <- nrow(Gender)
label_data <- Gender %>%
filter(Percentage > 0) %>%
mutate(
angle = 90 - 360 * (ID - 0.5) / nrow(Gender),
hjust = ifelse(angle < -90, 1, 0),
angle = ifelse(angle < -90, angle + 180, angle),
label_y = ifelse(Percentage * 100 > 30, Percentage * 100 + 8, Percentage * 100 + 5))
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region),
stat = "identity", alpha = 0.5) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", linewidth = 0.25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", size = 0.6, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"),
family = "Cormorant", size = 20, fontface = "bold", color = "#000000", hjust = 1) +
ggtext::geom_richtext(data = label_data,
aes(x = ID, y = label_y, label = .data[[label_column]],
angle = angle, hjust = hjust),
fill = NA, label.color = NA,
family = "Cormorant",
size = 6,
fontface = "bold",
color = "#000000",
lineheight = .75,
inherit.aes = FALSE) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
labs(title = "Membros da SBBE por Estágio Acadêmico & Gênero",
subtitle = "SBBE Members by Academic Stage & Gender") +
ylim(-90, 70) +
coord_polar() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
plot.subtitle = element_text(family = "Cormorant", size = 100, colour = "#555555", face = "bold", hjust = .5, margin = margin(t = 8.5)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
ggsave(filename, Gender_Plot, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Applies function ~
make_gender_plot("./SBBEPlots/SBBEMembersStats.png", "Variable_bilingual")
