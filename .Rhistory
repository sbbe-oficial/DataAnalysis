label_data_Gender <- Gender
number_of_bar <- nrow(label_data_Gender)
angle <- 90 - 360 * (label_data_Gender$ID - .5) / number_of_bar
label_data_Gender$hjust <- ifelse(angle < -90, 1, 0)
label_data_Gender$angle <- ifelse(angle < -90, angle + 180, angle)
# Expands BRL_Regions by creating Region ~
label_data_Gender$Variable_EN <- ifelse(Gender$Variable %in% c("Masculino"), "Male",
ifelse(Gender$Variable %in% c("Feminino"), "Female",
ifelse(Gender$Variable %in% c("Outro"), "Other",
ifelse(Gender$Variable %in% c("Profissional"), "Professional",
ifelse(Gender$Variable %in% c("Pós-graduação"), "Post-graduate",
ifelse(Gender$Variable %in% c("Graduação"), "Undergraduate", label_data_Gender$Variable))))))
base_data_Gender <- Gender %>%
group_by(Stats) %>%
summarize(start = min(ID),
end = max(ID) - empty_bar,
N = n(), .groups = "drop") %>%
mutate(end = ifelse(N == 1, start + 1, end)) %>%
mutate(title = (start + end) / 2)
grid_data_Gender <- base_data_Gender
grid_data_Gender$end <- grid_data_Gender$end[ c( nrow(grid_data_Gender), 1:nrow(grid_data_Gender) -1)] + 1
grid_data_Gender$start <- grid_data_Gender$start - 1
grid_data_Gender <- grid_data_Gender[-1, ]
# Create a data frame with swapped x, y positions for icons and labels
data <- data.frame(x = c(.2, .2, .6), y = c(.36, .43, .725), label = fontawesome(c("fa-venus-mars", "fa-genderless", "fa-graduation-cap")))
text_data <- data.frame(x = c(.2, .6), y = c(.1, .8), label = c("Gênero", "Estágio Acadêmico"))
# Function to build and save Gender plots ~
make_gender_plot <- function(title_text, filename, label_column) {
Gender_Plot <- ggplot(Gender, aes(x = as.factor(ID), y = Percentage * 100, fill = Stats)) +
geom_bar(stat = "identity", alpha = 1) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 10, xend = start, yend = 10),
colour = "#000000", alpha = 1, linewidth = .25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 20, xend = start, yend = 20),
colour = "#000000", alpha = 1, linewidth = .25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 30, xend = start, yend = 30),
colour = "#000000", alpha = 1, linewidth = .25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 40, xend = start, yend = 40),
colour = "#000000", alpha = 1, linewidth = .25, linetype = 4, inherit.aes = FALSE) +
geom_segment(data = grid_data_Gender, aes(x = end, y = 50, xend = start, yend = 50),
colour = "#000000", alpha = 1, linewidth = .25, linetype = 4, inherit.aes = FALSE) +
annotate("text", x = rep(max(Gender$ID), 5), y = c(10, 20, 30, 40, 50),
label = c("10%", "20%", "30%", "40%", "50%"), family = "Cormorant", size = 22,
fontface = "bold", color = "#000000", hjust = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region), stat = "identity", alpha = .5) +
scale_fill_manual(values = c("#e5d8bd", "#fdbf6f"), na.translate = FALSE) +
ylim(-90, 70) +
labs(title = title_text) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = "none",
plot.title = element_text(family = "Cormorant", size = 100, face = "bold", hjust = .5, margin = margin(t = 10)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank()) +
coord_polar() +
geom_text(data = label_data_Gender,
aes(x = ID, y = Percentage * 100 + 6,
label = .data[[label_column]], hjust = hjust),
family = "Cormorant", size = 25, color = "#000000",
fontface = "bold", angle = label_data_Gender$angle, inherit.aes = FALSE) +
geom_segment(data = base_data_Gender,
aes(x = start, y = -5, xend = end, yend = -5),
colour = "#000000", alpha = 1, size = .6, inherit.aes = FALSE)
ggsave(Gender_Plot, file = filename, limitsize = FALSE,
device = "png", scale = 1, width = 8, height = 7, dpi = 600)}
# Runs function to get both Gender plots ~
make_gender_plot("Membros da SBBE por Estágio Acadêmico & Gênero", "SBBEMembersStats_PT.png", "Variable")
make_gender_plot("SBBE Members by Academic Stage & Gender", "SBBEMembersStats_EN.png", "Variable_EN")
# Checks missing Institution ~
setdiff(fulldfUltra$Institution, variable_levels)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 12, height = 11, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT_NEW.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 10, height = 10, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT_NEW.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 12, height = 11, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT_NEW.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 12, height = 10.5, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT_NEW.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 12, height = 10.6, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT_NEW.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 12, height = 10.75, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT_NEW.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 12, height = 10.7, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT_NEW.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot <- function(filename, x_labels, y_labels, region_label_column, filter_abroad_only = TRUE) {
label_data_abroad <- fulldf_map %>%
dplyr::filter(Division == "Per Region", Stats == "Members" & Region != "SBBE24" ) %>%
{ if (filter_abroad_only) dplyr::filter(., Region == "Abroad") else . }
Map <- ggplot() +
geom_sf(data = fulldf_map, aes(fill = Percentage * 100), colour = "#f7fbff") +
coord_sf(xlim = c(-75.75, -33), ylim = c(-35, 6.5), expand = FALSE) +
scale_y_continuous(breaks = c(0, -10, -20, -30)) +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude), size = 2.8, starshape = 15, starstroke = .3,
fill = "#FF7B00", colour = "#000000") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = Percentage), size = 25, starshape = 8,
starstroke = .3, colour = "#f7fbff") +
geom_text(data = label_data_abroad,
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
size = 4.5, family = "Cormorant", colour = "#000000") +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region == "SBBE24"),
aes(x = Longitude, y = Latitude, label = .data[[region_label_column]]),
nudge_x = 3.6, nudge_y = -1,
size = 4.5, family = "Cormorant", fontface = "bold", colour = "#FF7B00") +
scale_fill_continuous(low = "#d6d6d6", high = "#004529",
breaks = c(10, 20, 30, 40, 50),
labels = c("10%", "20%", "30%", "40%", "50%"),
limits = c(0, 60)) +
facet_grid(Division ~ Stats, labeller = labeller(Division = x_labels, Stats = y_labels)) +
annotation_scale(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
text_family = "Cormorant", location = "bl", line_width = 1.25,
text_cex = 1, style = "ticks",
pad_x = unit(.2, "in"), pad_y = unit(.2, "in")) +
annotation_north_arrow(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members"),
location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(.2, "in"), pad_y = unit(.3, "in")) +
theme(legend.position = "right",
legend.margin = margin(t = 0, b = 0, r = 0, l = 20),
legend.box.margin = margin(t = 0, b = 20, r = 0, l = 0),
panel.background = element_rect(fill = "#ffffff"),
panel.border = element_rect(colour = "#000000", linewidth = .25, fill = NA),
panel.grid.major = element_line(color = "#d9d9d9", linetype = "dashed", linewidth = .00005),
plot.margin = margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
plot.title = element_text(family = "Cormorant", size = 120, face = "bold", hjust = .5, margin = margin(b = 13)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(family = "Cormorant", colour = "#000000", size = 21, face = "bold"),
strip.background = element_rect(colour = "#000000", fill = "#d6d6d6", linewidth = .25)) +
guides(fill = guide_colourbar(title = "", label.theme = element_text(family = "Cormorant", size = 25, face = "bold"),
barwidth = 1.5, barheight = 16, order = 1, frame.linetype = 1,
frame.colour = "#000000", ticks.colour = "#f7fbff",
direction = "vertical", reverse = FALSE, even.steps = TRUE,
draw.ulim = TRUE, draw.llim = TRUE))
ggsave(Map, file = filename, limitsize = FALSE,
device = "pdf", scale = 1, width = 12, height = 10.75, dpi = 600)}
# Runs function to get both Map plots ~
make_map_plot("SBBEArticleMap_PT.pdf", x_labels = xlabel_PT, y_labels = ylabel_PT, region_label_column = "Region_PT", filter_abroad_only = TRUE)
make_map_plot("SBBEArticleMap_EN.pdf", x_labels = xlabel_EN, y_labels = ylabel_EN, region_label_column = "Region", filter_abroad_only = FALSE)
