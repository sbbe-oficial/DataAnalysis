group_by(Region) %>%
summarize(start = min(ID),
end = max(ID) - empty_bar,
N = n(), .groups = "drop") %>%
mutate(end = ifelse(N == 1, start + 1, end)) %>%
mutate(title = (start + end) / 2)
# Prepares a data frame for grid ~
grid_data <- base_data
grid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1
grid_data$start <- grid_data$start - 1
grid_data <- grid_data[-1, ]
# Reorders Population ~
fulldf_map$name_region <- factor(fulldf_map$name_region, ordered = TRUE,
levels = c("Norte",
"Nordeste",
"Centro-Oeste",
"Sudeste",
"Sul",
"Abroad"))
# Creates panel ~
SmallMap <-
ggplot() +
geom_sf(data = subset(fulldf_map, name_region != "SBBE24"), aes(fill = name_region), colour = "#f7fbff") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = name_region), size = 26, starshape = 8, starstroke = .3, colour = "#f7fbff") +
scale_fill_manual(values = c("#1b9e77", "#fdb462", "#fb8072", "#bebada", "#80b1d3", "#e78ac3")) +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region != "SBBE24"),
aes(x = Longitude, y = Latitude, label = Region_PT),
family = "Cormorant", size = 5.25, colour = "#ffffff") +
coord_sf(xlim = c(-75.75, -33),
ylim = c(-35, 6.5),
expand = FALSE) +
theme(legend.position = "none",
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_blank(),
panel.grid = element_blank(),
plot.margin =  margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
# Convert map plot into a grob
SmallMap_Grob <- ggplotGrob(SmallMap)
max_height <- max(Circular$Percentage, na.rm = TRUE) * 100 + 3
# Generates plot ~
Institution_Plot <-
ggplot(Circular, aes(x = as.factor(ID), y = Percentage * 100, fill = Region)) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region), stat = "identity", alpha = 1) +
scale_fill_manual(values = c("#1b9e77", "#fdb462", "#fb8072", "#bebada", "#80b1d3", "#e78ac3"), na.translate = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
geom_segment(data = grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
geom_segment(data = grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
geom_segment(data = grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
annotate("text", x = rep(max(Circular$ID), 4), y = c(5, 10, 15, 20), label = c("5%", "10%", "15%", "20%"), family = "Cormorant", size = 4, fontface = "bold", color = "#737373", angle = 0, hjust = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region), stat = "identity", alpha = .5) +
ylim(-100, 80) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(-5.8, -4, -4, -4), "cm"),
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank()) +
coord_polar() +
#geom_text(data = label_data, aes(x = ID, y = max_height, label = Variable, hjust = hjust), family = "Barlow", size = 3.5, color = "#000000", fontface = "bold", alpha = .6, angle = label_data$angle, inherit.aes = FALSE ) +
geom_text(data = label_data, aes(x = ID, y = Percentage * 100 + 6, label = Variable, hjust = hjust), family = "Cormorant", size = 4, color = "#737373", fontface = "bold", angle = label_data$angle, inherit.aes = FALSE ) +
geom_segment(data = base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = "#000000", alpha = 1, size = .6, inherit.aes = FALSE)
Oi <- ggdraw() +
draw_plot(Institution_Plot) +
draw_plot(SmallMap, x = .3, y = .33, width = 0.4, height = 0.4)
# Saves plot ~
ggsave(Oi, file = "SBBE_InstitutionMap.pdf", limitsize = FALSE,
device = cairo_pdf, scale = 1, width = 15, height = 14, dpi = 600)
### The BEGINNING ~~~~~
##
# Plots SBBE -- Map | Written by George Pacheco ~
# Cleans environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads packages ~
pacman::p_load(tidyverse, ggstar, ggrepel, shadowtext, readxl, writexl, cowplot, ggpubr, lemon, reshape2, writexl, stringr, lubridate,
geobr, ggspatial, showtext, png, extrafont, sf, ggiraphExtra)
# Loads extra fonts ~
loadfonts()
font_add_google("Barlow", "Barlow")
font_add_google("Cormorant Garamond", "Cormorant")
showtext_auto()
# Loads data ~
fulldf <- read.csv("SBBEmembers_28mar25.csv", header = TRUE, stringsAsFactors = FALSE, sep = ",")
# Gets Stage ~
fulldf$Stage <- ifelse(grepl("Profissional", fulldf$Labels), "Profissional",
ifelse(grepl("Pós-Graduação", fulldf$Labels), "Pós-graduação",
ifelse(grepl("Graduação", fulldf$Labels), "Graduação", NA)))
# Expands fulldf by creating Region ~
fulldf$Region <- ifelse(fulldf$State %in% c("AC", "AM", "AP", "PA", "RR", "RO", "TO"), "Norte",
ifelse(fulldf$State %in% c("MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA"), "Nordeste",
ifelse(fulldf$State %in% c("DF", "GO", "MT", "MS"), "Centro-Oeste",
ifelse(fulldf$State %in% c("MG", "ES", "RJ", "SP"), "Sudeste",
ifelse(fulldf$State %in% c("PR", "RS", "SC"), "Sul",
ifelse(fulldf$State %in% c("Exterior"), "Exterior", "Error"))))))
# Defines the custom capitalization function ~
capitalize_words <- function(text) {
words <- str_split(text, " ")[[1]]
exclude_patterns <- c("of", "de", "da", "do", "ABC", "Não-binário", "(EUA)")
patterns_map <- setNames(exclude_patterns, tolower(exclude_patterns))
words <- sapply(words, function(word) {
word_lower <- tolower(word)
if (word_lower %in% names(patterns_map)) {
patterns_map[[word_lower]]}
else {str_to_title(word)}})
str_c(words, collapse = " ")}
# Apply the function to the pattern column
fulldf$Name <- sapply(fulldf$Name , capitalize_words)
fulldf$Institution <- sapply(fulldf$Institution , capitalize_words)
fulldf$Gender <- sapply(fulldf$Gender, capitalize_words)
# Sets all Brazilian states ~
AllBRLStates <- c("AC", "AP", "AM", "PA", "RO", "RR", "TO",
"BA", "CE", "MA", "PB", "PE", "PI", "RN", "SE", "AL",
"GO", "MT", "MS", "DF",
"ES", "MG", "RJ", "SP",
"PR", "RS", "SC", "Exterior")
# Sets all Brazilian regions ~
AllBRLRegions <- c("Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul", "Exterior")
# Defines a common set of levels and ordering for Variable ~
variable_levels <- c("AC", "AP", "AM", "PA", "RO", "RR", "TO",
"BA", "CE", "MA", "PB", "PE", "PI", "RN", "SE", "AL",
"GO", "MT", "MS", "DF",
"ES", "MG", "RJ", "SP",
"PR", "RS", "SC",
"Graduação",
"Pós-graduação",
"Profissional",
"Dias até o SBBE24",
"Seguidores no Bluesky",
"Seguidores no X",
"Seguidores no Instagram",
"Instituições representadas na SBBE",
"Afiliados à SBBE",
"University of Ottawa (Canadá)",
"Pennsylvania State University (EUA)",
"University of Texas (EUA)",
"Texas A&M University (EUA)",
"University of California — Los Angeles (EUA)",
"Rice University (EUA)",
"University of West Florida (EUA)",
"University of Aberdeen (Escócia)",
"University of Oslo (Noruega)",
"University of Copenhagen (Dinamarca)",
"Universidad Nacional de Misiones (Argentina)",
"Universidad Nacional de Trujillo (Argentina)",
"Instituto de Biología Subtropical (Argentina)",
"Instituto Multidisciplinario de Biología Vegetal (Argentina)",
"Universidad Nacional de Córdoba (Argentina)",
"Universidad de Buenos Aires (Argentina)",
"Universidade Federal de Santa Maria",
"Universidade Federal do Rio Grande",
"Universidade Federal de Pelotas",
"Universidade Federal de Ciências da Saúde de Porto Alegre",
"Universidade Federal do Rio Grande do Sul",
"Pontifícia Universidade Católica do Rio Grande do Sul",
"Universidade Federal da Integração Latino-Americana",
"Universidade Estadual de Maringá",
"Centro Universitário Claretiano",
"Uningá",
"Museu de História Natural Capão da Imbuia",
"Instituto Carlos Chagas — Fiocruz Paraná",
"Universidade Estadual de Ponta Grossa",
"Universidade Estadual do Centro-Oeste do Paraná",
"Secretaria de Educação do Estado do Paraná",
"Instituto Federal — Paraná",
"Universidade Tecnológica Federal do Paraná",
"Pontifícia Universidade Católica do Paraná",
"Universidade Federal do Paraná",
"Hospital Regional Hans Dieter Schmidt",
"Centro Universitário Leonardo da Vinci",
"Universidade da Região de Joinville",
"Universidade Federal de Santa Catarina",
"Universidade do Vale do Paraíba",
"Instituto Butantan",
"Universidade do Vale do Itajaí",
"Universidade Santo Amaro",
"Universidade do Oeste Paulista",
"Universidade de Mogi Das Cruzes",
"Universidade Federal de São Carlos",
"Universidade Federal do ABC",
"Universidade Federal de São Paulo",
"Universidade de São Paulo",
"Universidade Estadual de Campinas",
"Universidade Estadual Paulista",
"Unisãojosé",
"Universidade Estadual do Norte Fluminense Darcy Ribeiro",
"Instituto Oswaldo Cruz",
"Universidade Federal do Rio de Janeiro",
"Universidade do Estado do Rio de Janeiro",
"Universidade Federal do Espírito Santo",
"Instituto Nacional da Mata Atlântica",
"Pontifícia Universidade Católica de Minas Gerais",
"Universidade Federal de Uberlândia",
"Universidade Federal do Triângulo Mineiro",
"Universidade Federal de Juiz de Fora",
"Universidade do Estado de Minas Gerais",
"Universidade Federal de Minas Gerais",
"Universidade Federal de Lavras",
"Universidade Federal de Viçosa",
"Universidade Federal de São João Del-Rei",
"Universidade Federal de Jataí",
"Empresa Brasileira de Pesquisa Agropecuária",
"Universidade de Brasília",
"Universidade Federal de Goiás",
"Universidade Estadual de Goiás",
"Universidade do Estado de Mato Grosso",
"Universidade Federal de Mato Grosso",
"Universidade Federal de Mato Grosso do Sul",
"Universidade Federal da Grande Dourados",
"Universidade Estadual de Santa Cruz",
"Universidade Federal da Bahia",
"Universidade Estadual de Feira de Santana",
"Universidade Federal do Recôncavo da Bahia",
"Universidade Estadual do Sudoeste da Bahia",
"Universidade Federal de Sergipe",
"Universidade Federal de Alagoas",
"Universidade Federal do Vale do São Francisco",
"Universidade de Pernambuco",
"Instituto Aggeu Magalhães — Fiocruz Pernambuco",
"Instituto Federal — Pernambuco",
"Universidade Federal de Pernambuco",
"Universidade Estadual da Paraíba",
"Universidade Federal da Paraíba",
"Universidade Federal do Rio Grande do Norte",
"Museu Paraense Emílio Goeldi",
"Universidade Federal do Pará",
"Instituto Nacional de Pesquisas da Amazônia",
"Universidade Federal do Amazonas",
"Outro",
"Masculino",
"Feminino",
"Exterior",
"Sul",
"Sudeste",
"Centro-Oeste",
"Nordeste",
"Norte")
# Gets current date ~
current_date <- Sys.Date()
# Checks missing Institution ~
setdiff(fulldf$Institution, variable_levels)
# Gets general numbers ~
fulldf_Descriptive <- fulldf %>%
summarise("Afiliados à SBBE" = n_distinct(Name),
"Instituições representadas na SBBE" = n_distinct(Institution),
"Seguidores no Instagram" = 1922,
"Seguidores no Bluesky" = 29) %>%
mutate(Stats = "General") %>%
pivot_longer(cols = -Stats, names_to = "Variable", values_to = "Percentage") %>%
mutate(n = 0) %>%
relocate(n, .before = Percentage) %>%
relocate(Stats, .after = Percentage) %>%
mutate(Variable = factor(Variable, levels = variable_levels, ordered = TRUE))
# Gets percentage for Institution ~
fulldf_StageMembersPerc <- fulldf %>%
count(Stage) %>%
mutate(Percentage = n / sum(n)) %>%
rename(Variable = Stage) %>%
mutate(Stats = "StageMembers") %>%
mutate(Variable = factor(Variable, levels = variable_levels, ordered = TRUE))
# Create a data frame with counts and proportions per institution ~
fulldf_StateMembersPerc <- fulldf %>%
count(State) %>%
mutate(Percentage = n / sum(n)) %>%
rename(Variable = State) %>%
complete(Variable = AllBRLStates, fill = list(n = 0, Percentage = 0)) %>%
mutate(Variable = factor(Variable, levels = variable_levels, ordered = TRUE)) %>%
mutate(Stats = "StateMembers")
# Create a data frame with counts and proportions per institution ~
fulldf_RegionMembersPerc <- fulldf %>%
filter(Region != "Error") %>%
count(Region) %>%
mutate(Percentage = n / sum(n)) %>%
rename(Variable = Region) %>%
complete(Variable = AllBRLRegions, fill = list(n = 0, Percentage = 0)) %>%
mutate(Variable = factor(Variable, levels = variable_levels, ordered = TRUE)) %>%
mutate(Stats = "RegionMembers")
# Gets percentage for Gender ~
fulldf_GenderMembersPerc <- fulldf %>%
filter(Region != "Error") %>%
count(Gender) %>%
mutate(Percentage = n / sum(n)) %>%
rename(Variable = Gender) %>%
mutate(Variable = factor(Variable, levels = variable_levels, ordered = TRUE)) %>%
mutate(Stats = "GenderMembers")
fulldf_InstitutionMembersPerc <- fulldf %>%
filter(Institution != "") %>%
count(Institution, Region) %>%  # Count by both Institution and Region
mutate(Percentage = n / sum(n)) %>%
rename(Variable = Institution) %>%
mutate(Stats = "InstitutionMembers") %>%
mutate(Variable = factor(Variable, levels = variable_levels, ordered = TRUE))
# Combine the data frames ~
fulldfUp <- bind_rows(fulldf_StageMembersPerc,
fulldf_StateMembersPerc,
fulldf_RegionMembersPerc,
fulldf_GenderMembersPerc,
fulldf_InstitutionMembersPerc)
# Expands fulldfUp by creating BarFill ~
fulldfUp$BarFill <- ifelse(str_detect(fulldfUp$Stats, "Members"), "#006837",
ifelse(str_detect(fulldfUp$Stats, "Attendees"), "#41ab5d", "#fbb4ae"))
# Reorders Population ~
fulldfUp$Stats <- factor(fulldfUp$Stats, ordered = T,
levels = c("StageMembers",
"StateMembers",
"RegionMembers",
"GenderMembers",
"InstitutionMembers"))
# Sets custom x-axis labels ~
ylabel <- c("StageMembers" = "Afiliados à SBBE por Estágio Acadêmico",
"GenderMembers" = "Membros da SBBE por por Gênero")
# Load geom data ~
BRL_Regions <- read_region(simplified = TRUE, year = 2020)
BRL_States <- read_state(code_state = "all", simplified = TRUE, year = 2020)
# Corrects entries ~
levels(BRL_Regions$name_region <- gsub("Centro Oeste", "Centro-Oeste", BRL_Regions$name_region))
levels(BRL_States$name_region <- gsub("Centro Oeste", "Centro-Oeste", BRL_States$name_region))
# Expands BRL_Regions by creating Region ~
BRL_Regions$Region <- ifelse(BRL_Regions$name_region %in% c("Norte"), "North",
ifelse(BRL_Regions$name_region %in% c("Nordeste"), "Northeast",
ifelse(BRL_Regions$name_region %in% c("Centro-Oeste"), "Central-West",
ifelse(BRL_Regions$name_region %in% c("Sudeste"), "Southeast",
ifelse(BRL_Regions$name_region %in% c("Sul"), "South", "Error")))))
# Expands BRL_Regions by adding the SBBE24 & Abroad rows ~
BRL_Regions <- add_row(BRL_Regions, name_region = "SBBE24", Region = "SBBE24")
BRL_Regions <- add_row(BRL_Regions, name_region = "Abroad", Region = "Abroad")
BRL_States <- add_row(BRL_States, abbrev_state = "Abroad", name_region = "Abroad")
# Creates a data frame with the centroids of the Brazilian regions ~
BRL_Regions_Centroids_df <- data.frame(Region = c("North", "Northeast", "Central-West", "Southeast", "South", "SBBE24", "Abroad", "SP"),
Longitude = c(-58, -41.25, -53.15, -44.85, -51.2, -49.271111, -65, -48.62),
Latitude = c(-3.5, -8, -15.5, -20, -27.5, -25.429722, -25, -21.9))
# Merges data frame to perform the change ~
BRL_Regions <- left_join(BRL_Regions, BRL_Regions_Centroids_df, by = "Region")
# Reduces data ~
BRL_Regions <- BRL_Regions %>%
dplyr::select(-code_region)
BRL_States <- BRL_States %>%
dplyr::select(-c(code_state, code_region, name_state))
# Renames columns ~
BRL_States <- BRL_States %>%
rename(Variable = abbrev_state)
# Joins data frames ~
fulldf_RegionMembersPerc <- fulldf_RegionMembersPerc %>%
rename(name_region = Variable)
# Corrects the Estrangeiro -> Abroad ~
levels(fulldf_StateMembersPerc$Variable <- gsub("Exterior", "Abroad", fulldf_StateMembersPerc$Variable))
levels(fulldf_RegionMembersPerc$name_region <- gsub("Exterior", "Abroad", fulldf_RegionMembersPerc$name_region))
# Merges data frames individually ~
RegionMembers_df <- BRL_States %>%
inner_join(fulldf_RegionMembersPerc, by = "name_region") %>%
mutate(Stats = "Members")  %>%
mutate(Division = "Per Region")
StateMembers_df <- BRL_States %>%
inner_join(fulldf_StateMembersPerc, by = "Variable") %>%
mutate(Stats = "Members") %>%
mutate(Division = "Per State")
# Combines data frames ~
combined_sfs <- bind_rows(StateMembers_df, RegionMembers_df)
# Expands combined_sfs by adding the SBBE24 row ~
combined_sfs <- add_row(combined_sfs, name_region = "SBBE24", Division = "Per Region", Stats = "Members")
# Converts to data frames ~
combined_dfs <- as.data.frame(combined_sfs)
BRL_Regions_df <- as.data.frame(BRL_Regions)
# Merges data frame to perform the change ~
merged_dfs <- left_join(combined_dfs, BRL_Regions_df, by = "name_region", suffix = c("", ".BRL"))
# Performs the change ~
resulting_dfs <- merged_dfs %>%
mutate(geom = ifelse(Division == "Per Region", geom.BRL, geom))
# Eliminates unnecessary column ~
resulting_dfs <- resulting_dfs %>%
dplyr::select(-c(n, geom.BRL))
# Converts data frame back to sf ~
fulldf_map <- st_as_sf(resulting_dfs, crs = st_crs(combined_sfs))
# Renames columns ~
BRL_Regions_Centroids_df <- BRL_Regions_Centroids_df %>%
rename(Variable = Region)
# Converts to data frames ~
combined_dfs <- as.data.frame(combined_sfs)
BRL_Regions_df <- as.data.frame(BRL_Regions)
# Merges data frame to perform the change ~
fulldf_map <- left_join(fulldf_map, BRL_Regions_Centroids_df, by = "Variable", suffix = c("", ".SP"))
# Reorders Population ~
fulldf_map$Stats <- factor(fulldf_map$Stats, ordered = T,
levels = c("Members"))
# Reorders Division ~
fulldf_map$Division <- factor(fulldf_map$Division, ordered = T,
levels = c("Per Region",
"Per State"))
# Expands BRL_Regions by creating Region ~
fulldf_map$Region_PT <- ifelse(fulldf_map$Region %in% c("Northeast"), "Nordeste",
ifelse(fulldf_map$Region %in% c("North"), "Norte",
ifelse(fulldf_map$Region %in% c("Central-West"), "Centro-Oeste",
ifelse(fulldf_map$Region %in% c("Southeast"), "Sudeste",
ifelse(fulldf_map$Region %in% c("South"), "Sul",
ifelse(fulldf_map$Region %in% c("SBBE24"), "SBBE24",
ifelse(fulldf_map$Region %in% c("Abroad"), "Exterior", "Error")))))))
# Sets custom x-axis labels ~
xlabel_PT <- c("Per Region" = "Por Região",
"Per State" = "Por Estado")
ylabel_PT <- c("Members" = "% de Membros Fundadores da SBBE",
"Attendees" = "% de Participantes no SBBE24")
xlabel_EN <- c("Members" = "% of SBBE Members",
"Attendees" = "% of SBBE24 Attendees")
ylabel_EN <- c("Members" = "% of SBBE Members",
"Attendees" = "% of SBBE24 Attendees")
# Creates the Circular data frame ~
Circular <- subset(fulldfUp, Stats == "InstitutionMembers" & Region != "Error") %>% arrange(desc(Percentage))
# Reorders Population ~
Circular$Region <- factor(Circular$Region, ordered = TRUE,
levels = c("Norte",
"Nordeste",
"Centro-Oeste",
"Sudeste",
"Sul",
"Exterior"))
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 2
to_add <- data.frame( matrix(NA, empty_bar * nlevels(Circular$Region), ncol(Circular)) )
colnames(to_add) <- colnames(Circular)
to_add$Region <- rep(levels(Circular$Region), each = empty_bar)
Circular <- rbind(Circular, to_add)
Circular <- Circular %>% arrange(Region)
Circular$ID <- seq(1, nrow(Circular))
# Get the name and the y position of each label
label_data <- Circular
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$ID - .5) / number_of_bar
label_data$hjust <- ifelse(angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
# Prepares a data frame for base lines ~
base_data <- Circular %>%
group_by(Region) %>%
summarize(start = min(ID),
end = max(ID) - empty_bar,
N = n(), .groups = "drop") %>%
mutate(end = ifelse(N == 1, start + 1, end)) %>%
mutate(title = (start + end) / 2)
# Prepares a data frame for grid ~
grid_data <- base_data
grid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1
grid_data$start <- grid_data$start - 1
grid_data <- grid_data[-1, ]
# Reorders Population ~
fulldf_map$name_region <- factor(fulldf_map$name_region, ordered = TRUE,
levels = c("Norte",
"Nordeste",
"Centro-Oeste",
"Sudeste",
"Sul",
"Abroad"))
# Creates panel ~
SmallMap <-
ggplot() +
geom_sf(data = subset(fulldf_map, name_region != "SBBE24"), aes(fill = name_region), colour = "#f7fbff") +
geom_star(data = subset(fulldf_map, Division == "Per Region" & Region == "Abroad"),
aes(x = Longitude, y = Latitude, fill = name_region), size = 26, starshape = 8, starstroke = .3, colour = "#f7fbff") +
scale_fill_manual(values = c("#1b9e77", "#fdb462", "#fb8072", "#bebada", "#80b1d3", "#e78ac3")) +
geom_text(data = subset(fulldf_map, Division == "Per Region" & Stats == "Members" & Region != "SBBE24"),
aes(x = Longitude, y = Latitude, label = Region_PT),
family = "Cormorant", size = 5.25, colour = "#ffffff") +
coord_sf(xlim = c(-75.75, -33),
ylim = c(-35, 6.5),
expand = FALSE) +
theme(legend.position = "none",
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_blank(),
panel.grid = element_blank(),
plot.margin =  margin(t = 0, b = 0, r = 0, l = 0, unit = "cm"),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
# Convert map plot into a grob
SmallMap_Grob <- ggplotGrob(SmallMap)
max_height <- max(Circular$Percentage, na.rm = TRUE) * 100 + 3
# Generates plot ~
Institution_Plot <-
ggplot(Circular, aes(x = as.factor(ID), y = Percentage * 100, fill = Region)) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region), stat = "identity", alpha = 1) +
scale_fill_manual(values = c("#1b9e77", "#fdb462", "#fb8072", "#bebada", "#80b1d3", "#e78ac3"), na.translate = FALSE) +
geom_segment(data = grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
geom_segment(data = grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
geom_segment(data = grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
geom_segment(data = grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "#737373", alpha = 1, linewidth = .4, linetype = 4, inherit.aes = FALSE ) +
annotate("text", x = rep(max(Circular$ID), 4), y = c(5, 10, 15, 20), label = c("5%", "10%", "15%", "20%"), family = "Cormorant", size = 4, fontface = "bold", color = "#737373", angle = 0, hjust = 1) +
geom_bar(aes(x = as.factor(ID), y = Percentage * 100, fill = Region), stat = "identity", alpha = .5) +
ylim(-100, 80) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(-5.8, -4, -4, -4), "cm"),
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank()) +
coord_polar() +
#geom_text(data = label_data, aes(x = ID, y = max_height, label = Variable, hjust = hjust), family = "Barlow", size = 3.5, color = "#000000", fontface = "bold", alpha = .6, angle = label_data$angle, inherit.aes = FALSE ) +
geom_text(data = label_data, aes(x = ID, y = Percentage * 100 + 6, label = Variable, hjust = hjust), family = "Cormorant", size = 4, color = "#737373", fontface = "bold", angle = label_data$angle, inherit.aes = FALSE ) +
geom_segment(data = base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = "#000000", alpha = 1, size = .6, inherit.aes = FALSE)
Oi <- ggdraw() +
draw_plot(Institution_Plot) +
draw_plot(SmallMap, x = .3, y = .33, width = 0.4, height = 0.4)
# Saves plot ~
ggsave(Oi, file = "SBBE_InstitutionMap.pdf", limitsize = FALSE,
device = cairo_pdf, scale = 1, width = 15, height = 14, dpi = 600)
